#!/bin/bash

# Author: BMO
# Name: wp
# Description: All the SSH things you need to do, but are too lazy to type them in.
# Version: 4.2
# Recent Changes:
# 4.2 -- Silenced the output of SSH and SCP
# 4.1 -- Hurray uname function!
# 4.0 -- Duplicity Restore function
# 3.9 -- Better wp-admin and wp-includes exclusions with the Find function
# 3.9 -- Smoothed out the exit ability of the find function
# 3.9 -- Added htop function


#------------------------------- Define the functions -----------------------------------#

# Get the accounts NGINX config file and open it using Sublime
function config {
	if [[ -n $action ]] || [[ -n $scnd ]]; then
	echo "Alright, let's get the Config File!"
		scp ${uname}@$account.wpengine.com:/nas/wp/conf/lb/sites/$account.conf $account.conf
		nano $account.conf
	fi
	echo "Back to the Menu"
}

# Login
function login {
	envir
	if [[ -n $frth ]]; then
		echo "Alright, Logging into the $envir and going to $frth"
			sl -ale
			clear
			ssh -tq ${uname}@$account.wpengine.com "cd /nas/wp/www/$envir/$account/$frth ; bash"
		more
	else
		echo "Alright, logging into the $envir Server"
			sl -ale
			clear
			ssh -tq ${uname}@$account.wpengine.com "cd /nas/wp/www/$envir/$account ; bash"
	fi
	echo "Back to the Menu"
}

# Get a file
function get {
	envir
	if [[ -n $frth ]] && [[ -n $fth ]]; then
		dir=$frth
		file=$fth
	elif [[ -n $frth ]] && [[ -z $fth ]]; then
		dir=$frth
		echo -n "Where do you want it local? "
		read -r file
	else
		echo "Getting the file from the $envir Server"
		echo -n "Path to file? "
		read -r dir
		echo -n "Where do you want it local? "
		read -r file
	fi
		scp -rq ${uname}@$account.wpengine.com:/nas/wp/www/$envir/$account/$dir $file
	echo "Back to the Menu"
}

# Put a file
function put {
	envir
	if [[ -n $frth ]] && [[ -n $fth ]]; then
		file=$frth
		dir=$fth
	elif [[ -n $frth ]] && [[ -z $fth ]]; then
		file=$frth
		echo -n "Where do you want it on the server? "
		read -r dir
	else
		echo "Putting the File on the $envir Server"
		echo -n "Where is the file? "
		read -r file
		echo -n "Where do you want it on the server? "
		read -r dir
	fi
		scp -rq $file ${uname}@$account.wpengine.com:/home/${uname}/$file
		ssh -tq ${uname}@$account.wpengine.com "sudo mv $file /nas/wp/www/$envir/$account/$dir && exit ; bash"
	echo "Back to the Menu"
}

#Find and list a file name
function find {
	envir
	if [[ -n $frth ]]; then
		search=$frth
	elif [[ -z $frth ]]; then
		echo -n "What file are you looking for? "
		read -r search 
	fi
	echo -n " Is this a File or a String that you are looking for? "
	read -r which
	if [[ $which = f* ]]; then
		ssh -tq ${uname}@$account.wpengine.com "cd /nas/wp/www/$envir/$account/ && find . -type f -name '"*$search*"' ! -path '"./wp-admin/*"' ! -path '"./wp-includes/*"' > /home/${uname}/find.txt && exit ; bash"
		scp -rq ${uname}@$account.wpengine.com:/home/${uname}/find.txt find.txt
		nl find.txt
	else
		ssh -tq ${uname}@$account.wpengine.com "cd /nas/wp/www/$envir/$account && sudo ack-grep --ignore-dir=wp-includes --ignore-dir=wp-admin --nosql "$search" > /home/${uname}/ack.txt && exit ; bash"
		scp -rq ${uname}@$account.wpengine.com:/home/${uname}/ack.txt ack.txt
		nl ack.txt
		awk -F':' '{print $1}' ack.txt > find.txt
		awk -F':' '{print $2}' ack.txt > line.txt
	fi
	echo -n "Which File would you like to Open? Pick a number. "
	read -r num
		while [[ $num = [0-9]* ]]; do
			pick=$(sed -n "$num"p find.txt)
			if [[ $which != f* ]]; then
				pickline=$(sed -n "$num"p line.txt)
				ssh -tq ${uname}@$account.wpengine.com "cd /nas/wp/www/$envir/$account && sudo nano +$pickline $pick && exit ; bash"
				nl ack.txt
			else
				ssh -tq ${uname}@$account.wpengine.com "cd /nas/wp/www/$envir/$account && sudo nano $pick && exit ; bash"
				nl find.txt
			fi
		echo -n "Would you like to open another? Press X to finish "
		read -r num
		done
		opt=n
}

# Make a .tar of /wp-content folder on production
function tar {
	envir
	ssh -tq ${uname}@$account.wpengine.com "cd /nas/wp/www/$envir/$account/_wpeprivate && sudo tar -cvf $account-wp-content.tar ../wp-content/* && exit ; bash"
	echo -n "Would you like to Download this .tar? Yes or No "
	read -r down
	if [[ $down = y* ]]; then
		scp ${uname}@$account.wpengine.com:/nas/wp/www/$envir/$account/_wpeprivate/$account-wp-content.tar $account-wp-content.tar 
		#tar -xvf $account-wp-content.tar && thunar $account/wp-content  #Runs local and opens file
	fi
	echo "Back to the Menu"
}

# Get the files for a Site or Specific Folder from our Duplicity Backup (full backup)
function duplicity {
	if [[ $thrd = [0-9]* ]]; then
		date=$thrd
	else
		# Get the Date to restore from
		echo -n "From what date? YYYMMDD "
		read -r date
    fi
    if [[ -n $frth ]]; then
    	folder=$frth
    else
		# Optionally, get a specific folder
		echo -n "Which Folder? (Press enter for the whole site) "
		read -r folder
	fi
	# Do the things
	if [[ -n $folder ]]; then
		ssh -tq ${uname}@$account.wpengine.com "cd /var/tmp && sudo duplicity_restore_v2 -s $account -d $date -r $folder && sudo mv -f $account /home/${uname}/ && exit ; bash"
	else
		ssh -tq ${uname}@$account.wpengine.com "cd /var/tmp && sudo duplicity_restore_v2 -s $account -d $date -r / && sudo mv -f $account /home/${uname}/ && exit ; bash"
	fi
		#ssh -tq ${uname}@$account.wpengine.com "cd /var/tmp &&  && exit ; bash"
	# Optional, Tar up the results and download them.
	clean=n
	while [[ $clean = n* ]] || [[ $clean = N* ]]; do
	echo -n "Would you like to Download, Rsync, or Move the results? (press Enter for None of these) "
	read -r option
		if [[ $option = d* ]] || [[ $option = D* ]]; then
			ssh -tq ${uname}@$account.wpengine.com "tar -cvf $account-duplicity.tar $account && exit ; bash"
			scp ${uname}@$account.wpengine.com:$account-duplicity.tar $account-duplicity.tar 
		elif [[ $option = r* ]] || [[ $option = R* ]]; then
			echo "Sending you in as Root -> Best of luck soldier. (~sad trumpet plays in the background~)"
			ssh -tq ${uname}@bmoore.wpengine.com "sudo ssh root@$account.wpengine.com && exit ; bash"
		elif [[ $option = m* ]] || [[ $option = M* ]]; then
			echo "Tar it or as is? "
			read -r method
				if [[ $method = t* ]]; then
					ssh -tq ${uname}@$account.wpengine.com "tar -cvf $account-duplicity.tar $account && sudo mv $account-duplicity.tar /nas/wp/www/sites/$account/_wpeprivate/ && exit ; bash"
				else
					ssh -tq ${uname}@$account.wpengine.com "sudo mv -f $account /nas/wp/www/sites/$account/_wpeprivate/ && exit ; bash"
				fi
		elif [[ -z $option ]]; then
			echo "Alright, dropping you in the folder, have fun."
			ssh -tq ${uname}@$account.wpengine.com "cd $acount ; bash"
		fi
	echo "All Done? Clean up? Yes or No "
	read -r clean
	done
	sleep .5
	ssh -tq ${uname}@$account.wpengine.com "sudo rm -rf $account && exit ; bash"
	echo "Back to the Menu"
}

# Uncancel the site
function uncan {
	ssh -tq ${uname}@$account.wpengine.com "sudo /nas/wp/ec2/cluster uncancel-site $account && exit ; bash"
	echo "Back to the Menu"
}

# Clear the Rewrite Rules
function rewrite {
	ssh -tq ${uname}@$account.wpengine.com "sudo php /nas/wp/www/tools/wpe.php option-set $account rewrites NULL && exit ; bash"
	echo "Back to the Menu"
}

# Turn off Bot Redirect 
function bot {
	ssh -tq ${uname}@$account.wpengine.com "php /nas/wp/www/tools/wpe.php option-set $account redirect_bots '0' && exit ; bash"
	echo "Back to the Menu"
}

# HTOP a pod
function htop {
	ssh -tq ${uname}@$account.wpengine.com "htop && exit ; bash"
	echo "Back to the Menu"
}

# Run a Utility Script Tool thing from Shell.
function script {
# What Script would you like to run?
echo "List of Scripts:"
echo "deploy"
#echo "perm-reload-apply"
echo "fixperms"
echo "purge-varnish"
echo "regen-config"
echo "reinstall-core"
echo -n "What Script would you like to run? (Type it out completely) "
read -r script
ssh -tq ${uname}@$account.wpengine.com "sudo /nas/wp/admin $script $account && exit ; bash"
echo "Back to the Menu"
}

#-----------------------Functions for this scripts function ----------------------#
#Determine the Working Environment
function envir {
if [[ -n $thrd ]] && [[ -z $opt ]]; then
	if [[ $thrd = -p ]]; then
		envir=sites
	elif [[ $thrd = -s ]]; then
		envir=staging
	else
		echo -n "Is this the Production or the Staging Server? "
	    read -r env
		if [[ $env = p* ]] || [[ $env = -p ]]; then
			envir=sites
		elif [[ $env = s* ]] || [[ $env = -s ]]; then
			envir=staging
		fi
	fi
elif [[ -z $thrd ]]; then
	echo -n "Is this the Production or the Staging Server? "
	read -r env
		if [[ $env = p* ]] || [[ $env = -p ]]; then
			envir=sites
		elif [[ $env = s* ]] || [[ $env = -s ]]; then
			envir=staging
		fi
fi
}

# Get the Account name when needed
function acnt {
	echo -n "What is the account name we will be working with? "
	read -r account
}
# Set Uname
function setuname {
if [[ -z ${uname} ]]; then
	read -p "What is your SSH User Name? " name
	sed -ie "s/^uname=/uname=${name}/g" ${0}
else
	setname=$(awk '/^uname=/' ${0})
	echo -e "\nYou've already set a User Name silly.\n --> ${setname}\n"
fi
}
uname=

#List the options
function dyn {
	echo "1: Login to SSH (-l)"
	echo "2: Get Something (-g)"
	echo "3: Put Something (-p)"
	echo "4: Purge the Rewrite Rules (-r)"
	echo "5: Uncancel a Site (-u)"
	echo "6: Tar the /wp-content directory (-t)"
	echo "7: Get the NGINX Config file (-c)"
	echo "8: Find a File (-f)"
	echo "9: Run a Script from the Utilities Page (-s)"
	echo "10: Turn of Bot Redirect (-b)"
	echo "11: Run HTOP on a pod (-h)" 
	echo "12: Restore a Site or Folder from Duplicity (-d)"
	echo "Press X to exit "
	echo -n "What would you like to do? "
	read -r action
	## Dynamic Actions
	if	[[ $action = 1 ]] || [[ $action = l* ]] || [[ $action = -l ]]; then
		login
	elif [[ $action = 2 ]] || [[ $action = g* ]] || [[ $action = -g ]]; then
		get
	elif [[ $action = 3 ]] || [[ $action = p* ]] || [[ $action = -p ]]; then
		put
	elif [[ $action = 4 ]] || [[ $action = r* ]] || [[ $action = -r ]]; then
		rewrite
	elif [[ $action = 5 ]] || [[ $action = u* ]] || [[ $action = -u ]]; then
		uncan
	elif [[ $action = 6 ]] || [[ $action = t* ]] || [[ $action = -t ]]; then
		tar
	elif [[ $action = 7 ]] || [[ $action = c* ]] || [[ $action = -c ]]; then
		config
	elif [[ $action = 8 ]] || [[ $action = f* ]] || [[ $action = -f ]]; then
		find
	elif [[ $action = 9 ]] || [[ $action = s* ]] || [[ $action = -s ]]; then
		script
	elif [[ $action = 10 ]] || [[ $action = b* ]] || [[ $action = -b ]]; then
		bot
	elif [[ $action = 11 ]] || [[ $action = h* ]] || [[ $action = -h ]]; then
		htop
	elif [[ $action = 12 ]] || [[ $action = d* ]] || [[ $action = -d ]]; then
		duplicity
	elif [[ $action = x ]] || [[ $action = X ]] || [[ $action = ex* ]]; then
		opt=n
	fi
}

## If Args are static

# Available Args are as follows:
# -l  1: Login to SSH
# -g  2: Get Something
# -p  3: Put Something
# -r  4: Purge the Rewrite Rules
# -u  5: Uncancel a Site
# -t  6: Tar the /wp-content directory
# -c  7: Get the NGINX Config file
# -f  8: Find a File
# -s  9: Run a Script (utilities)
# -b  10: Disable Bot Redirecting

function static {
	if [[ $scnd = -l ]]; then
		login
	elif [[ $scnd = -g ]]; then
		get
	elif [[ $scnd = -p ]]; then
		put
	elif [[ $scnd = -r ]]; then
		rewrite
	elif [[ $scnd = -u ]]; then
		uncan
	elif [[ $scnd = -t ]]; then
		tar
	elif [[ $scnd = -c ]]; then
		config
	elif [[ $scnd = -f ]]; then
		find
	elif [[ $scnd = -s ]]; then
		script
	elif [[ $scnd = -b ]]; then
		bot
	elif [[ $scnd = -h ]]; then
		htop
	elif [[ $scnd = -d ]]; then
		duplicity
	fi
}


#---------------- Run it! ------------------------#
if [[ -z ${uname} ]]; then 
	setuname
else
while [[ -z $more ]]; do 
	if [[ $1 = -* ]]; then
		scnd=$1
		thrd=$2
		frth=$3
		fth=$4
		acnt
		static
	elif [[ -n $1 ]] && [[ -n $2 ]]; then
		account=$1
		scnd=$2
		thrd=$3
		frth=$4
		fth=$5
		static
	elif [[ -n $1 ]] && [[ -z $2 ]]; then
		account=$1
		dyn
	elif [[ -z $1 ]]; then
		if [[ -z $account ]]; then
			acnt
			dyn
		else
			dyn
		fi
	fi
while [[ -z $opt ]]; do
	scnd=""
	thrd=""
	frth=""
	fth=""
	dyn
done
more=1
exit 0
#kill `ps aux | grep terminal | awk '{ print $2 }'`
done
fi
